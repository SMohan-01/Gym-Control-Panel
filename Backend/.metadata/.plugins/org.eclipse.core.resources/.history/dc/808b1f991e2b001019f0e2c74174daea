package in.mohan.gym_management_system.controller;

import java.util.HashMap;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import in.mohan.gym_management_system.entity.AdminEntity;
import in.mohan.gym_management_system.exception.AdminNotExistException;
import in.mohan.gym_management_system.service.AdminService;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@RestController
public class AdminController {
	
	private AdminService adminService;
	
	@Autowired
	public AdminController(AdminService adminService) {
		super();
		this.adminService = adminService;
	}


	@PostMapping("/login")
	public ResponseEntity<Map<String, String>> login(@RequestBody AdminEntity request) {
		try {
			String token = adminService.login(request);
            Map<String, String> response = new HashMap<>();
            response.put("Message", "Login Succesfull!");
            response.put("Token", token);
            return  ResponseEntity.ok(response);
			
		}
		catch(AdminNotExistException exception) {
			Map<String, String> error = new HashMap<>();
            error.put("error", exception.getMessage());
            return ResponseEntity.badRequest().body(error);
		}
		catch (Exception e) {
	        Map<String, String> error = new HashMap<>();
	        error.put("error", "Login failed. Invalid credentials.");
	        return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(error);
	    }
	}
	
	@GetMapping("/profile")
	public ResponseEntity<?> getProfile(@RequestParam String emailAddress) {
		ResponseEntity<?> responseEntity;
		try {
			responseEntity = new ResponseEntity<>(adminService.getAdminProfile(emailAddress), HttpStatus.OK);
		} catch (AdminNotExistException exception) {
			responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.NOT_ACCEPTABLE);
		}
		return responseEntity;
	}
	
	@GetMapping("/logout")
	public ResponseEntity<String> logout() {
	    return ResponseEntity.ok("Logged out successfully");
	}




}
